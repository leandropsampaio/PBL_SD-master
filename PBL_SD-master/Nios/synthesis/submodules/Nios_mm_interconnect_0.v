// Nios_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2018.10.18.22:28:55

`timescale 1 ps / 1 ps
module Nios_mm_interconnect_0 (
		input  wire        Clk_clk_clk,                              //                            Clk_clk.clk
		input  wire        Nios_reset_n_reset_bridge_in_reset_reset, // Nios_reset_n_reset_bridge_in_reset.reset
		input  wire [16:0] Nios_data_master_address,                 //                   Nios_data_master.address
		output wire        Nios_data_master_waitrequest,             //                                   .waitrequest
		input  wire [3:0]  Nios_data_master_byteenable,              //                                   .byteenable
		input  wire        Nios_data_master_read,                    //                                   .read
		output wire [31:0] Nios_data_master_readdata,                //                                   .readdata
		input  wire        Nios_data_master_write,                   //                                   .write
		input  wire [31:0] Nios_data_master_writedata,               //                                   .writedata
		input  wire        Nios_data_master_debugaccess,             //                                   .debugaccess
		input  wire [16:0] Nios_instruction_master_address,          //            Nios_instruction_master.address
		output wire        Nios_instruction_master_waitrequest,      //                                   .waitrequest
		input  wire        Nios_instruction_master_read,             //                                   .read
		output wire [31:0] Nios_instruction_master_readdata,         //                                   .readdata
		output wire [0:0]  Jtag_avalon_jtag_slave_address,           //             Jtag_avalon_jtag_slave.address
		output wire        Jtag_avalon_jtag_slave_write,             //                                   .write
		output wire        Jtag_avalon_jtag_slave_read,              //                                   .read
		input  wire [31:0] Jtag_avalon_jtag_slave_readdata,          //                                   .readdata
		output wire [31:0] Jtag_avalon_jtag_slave_writedata,         //                                   .writedata
		input  wire        Jtag_avalon_jtag_slave_waitrequest,       //                                   .waitrequest
		output wire        Jtag_avalon_jtag_slave_chipselect,        //                                   .chipselect
		output wire [1:0]  led1_s1_address,                          //                            led1_s1.address
		output wire        led1_s1_write,                            //                                   .write
		input  wire [31:0] led1_s1_readdata,                         //                                   .readdata
		output wire [31:0] led1_s1_writedata,                        //                                   .writedata
		output wire        led1_s1_chipselect,                       //                                   .chipselect
		output wire [1:0]  led2_s1_address,                          //                            led2_s1.address
		output wire        led2_s1_write,                            //                                   .write
		input  wire [31:0] led2_s1_readdata,                         //                                   .readdata
		output wire [31:0] led2_s1_writedata,                        //                                   .writedata
		output wire        led2_s1_chipselect,                       //                                   .chipselect
		output wire [1:0]  led3_s1_address,                          //                            led3_s1.address
		output wire        led3_s1_write,                            //                                   .write
		input  wire [31:0] led3_s1_readdata,                         //                                   .readdata
		output wire [31:0] led3_s1_writedata,                        //                                   .writedata
		output wire        led3_s1_chipselect,                       //                                   .chipselect
		output wire [1:0]  led4_s1_address,                          //                            led4_s1.address
		output wire        led4_s1_write,                            //                                   .write
		input  wire [31:0] led4_s1_readdata,                         //                                   .readdata
		output wire [31:0] led4_s1_writedata,                        //                                   .writedata
		output wire        led4_s1_chipselect,                       //                                   .chipselect
		output wire [1:0]  led5_s1_address,                          //                            led5_s1.address
		output wire        led5_s1_write,                            //                                   .write
		input  wire [31:0] led5_s1_readdata,                         //                                   .readdata
		output wire [31:0] led5_s1_writedata,                        //                                   .writedata
		output wire        led5_s1_chipselect,                       //                                   .chipselect
		output wire [12:0] memory_s1_address,                        //                          memory_s1.address
		output wire        memory_s1_write,                          //                                   .write
		input  wire [31:0] memory_s1_readdata,                       //                                   .readdata
		output wire [31:0] memory_s1_writedata,                      //                                   .writedata
		output wire [3:0]  memory_s1_byteenable,                     //                                   .byteenable
		output wire        memory_s1_chipselect,                     //                                   .chipselect
		output wire        memory_s1_clken,                          //                                   .clken
		output wire [8:0]  Nios_jtag_debug_module_address,           //             Nios_jtag_debug_module.address
		output wire        Nios_jtag_debug_module_write,             //                                   .write
		output wire        Nios_jtag_debug_module_read,              //                                   .read
		input  wire [31:0] Nios_jtag_debug_module_readdata,          //                                   .readdata
		output wire [31:0] Nios_jtag_debug_module_writedata,         //                                   .writedata
		output wire [3:0]  Nios_jtag_debug_module_byteenable,        //                                   .byteenable
		input  wire        Nios_jtag_debug_module_waitrequest,       //                                   .waitrequest
		output wire        Nios_jtag_debug_module_debugaccess,       //                                   .debugaccess
		output wire [1:0]  pushbuton1_s1_address,                    //                      pushbuton1_s1.address
		input  wire [31:0] pushbuton1_s1_readdata,                   //                                   .readdata
		output wire [1:0]  pushbuton2_s1_address,                    //                      pushbuton2_s1.address
		input  wire [31:0] pushbuton2_s1_readdata,                   //                                   .readdata
		output wire [1:0]  pushbuton3_s1_address,                    //                      pushbuton3_s1.address
		input  wire [31:0] pushbuton3_s1_readdata,                   //                                   .readdata
		output wire [1:0]  pushbuton4_s1_address,                    //                      pushbuton4_s1.address
		input  wire [31:0] pushbuton4_s1_readdata                    //                                   .readdata
	);

	wire         nios_instruction_master_translator_avalon_universal_master_0_waitrequest;                    // Nios_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> Nios_instruction_master_translator:uav_waitrequest
	wire   [2:0] nios_instruction_master_translator_avalon_universal_master_0_burstcount;                     // Nios_instruction_master_translator:uav_burstcount -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] nios_instruction_master_translator_avalon_universal_master_0_writedata;                      // Nios_instruction_master_translator:uav_writedata -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [16:0] nios_instruction_master_translator_avalon_universal_master_0_address;                        // Nios_instruction_master_translator:uav_address -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire         nios_instruction_master_translator_avalon_universal_master_0_lock;                           // Nios_instruction_master_translator:uav_lock -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire         nios_instruction_master_translator_avalon_universal_master_0_write;                          // Nios_instruction_master_translator:uav_write -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire         nios_instruction_master_translator_avalon_universal_master_0_read;                           // Nios_instruction_master_translator:uav_read -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] nios_instruction_master_translator_avalon_universal_master_0_readdata;                       // Nios_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> Nios_instruction_master_translator:uav_readdata
	wire         nios_instruction_master_translator_avalon_universal_master_0_debugaccess;                    // Nios_instruction_master_translator:uav_debugaccess -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] nios_instruction_master_translator_avalon_universal_master_0_byteenable;                     // Nios_instruction_master_translator:uav_byteenable -> Nios_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         nios_instruction_master_translator_avalon_universal_master_0_readdatavalid;                  // Nios_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> Nios_instruction_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_src_endofpacket;                                                                // rsp_xbar_mux:src_endofpacket -> Nios_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                      // rsp_xbar_mux:src_valid -> Nios_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                              // rsp_xbar_mux:src_startofpacket -> Nios_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [94:0] rsp_xbar_mux_src_data;                                                                       // rsp_xbar_mux:src_data -> Nios_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [11:0] rsp_xbar_mux_src_channel;                                                                    // rsp_xbar_mux:src_channel -> Nios_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_src_ready;                                                                      // Nios_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux:src_ready
	wire         nios_data_master_translator_avalon_universal_master_0_waitrequest;                           // Nios_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> Nios_data_master_translator:uav_waitrequest
	wire   [2:0] nios_data_master_translator_avalon_universal_master_0_burstcount;                            // Nios_data_master_translator:uav_burstcount -> Nios_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] nios_data_master_translator_avalon_universal_master_0_writedata;                             // Nios_data_master_translator:uav_writedata -> Nios_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [16:0] nios_data_master_translator_avalon_universal_master_0_address;                               // Nios_data_master_translator:uav_address -> Nios_data_master_translator_avalon_universal_master_0_agent:av_address
	wire         nios_data_master_translator_avalon_universal_master_0_lock;                                  // Nios_data_master_translator:uav_lock -> Nios_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire         nios_data_master_translator_avalon_universal_master_0_write;                                 // Nios_data_master_translator:uav_write -> Nios_data_master_translator_avalon_universal_master_0_agent:av_write
	wire         nios_data_master_translator_avalon_universal_master_0_read;                                  // Nios_data_master_translator:uav_read -> Nios_data_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] nios_data_master_translator_avalon_universal_master_0_readdata;                              // Nios_data_master_translator_avalon_universal_master_0_agent:av_readdata -> Nios_data_master_translator:uav_readdata
	wire         nios_data_master_translator_avalon_universal_master_0_debugaccess;                           // Nios_data_master_translator:uav_debugaccess -> Nios_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] nios_data_master_translator_avalon_universal_master_0_byteenable;                            // Nios_data_master_translator:uav_byteenable -> Nios_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         nios_data_master_translator_avalon_universal_master_0_readdatavalid;                         // Nios_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> Nios_data_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_001_src_endofpacket;                                                            // rsp_xbar_mux_001:src_endofpacket -> Nios_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_001_src_valid;                                                                  // rsp_xbar_mux_001:src_valid -> Nios_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_001_src_startofpacket;                                                          // rsp_xbar_mux_001:src_startofpacket -> Nios_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [94:0] rsp_xbar_mux_001_src_data;                                                                   // rsp_xbar_mux_001:src_data -> Nios_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [11:0] rsp_xbar_mux_001_src_channel;                                                                // rsp_xbar_mux_001:src_channel -> Nios_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_001_src_ready;                                                                  // Nios_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_001:src_ready
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // Nios_jtag_debug_module_translator:uav_waitrequest -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;              // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> Nios_jtag_debug_module_translator:uav_burstcount
	wire  [31:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;               // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> Nios_jtag_debug_module_translator:uav_writedata
	wire  [16:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                 // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> Nios_jtag_debug_module_translator:uav_address
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                   // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> Nios_jtag_debug_module_translator:uav_write
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                    // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> Nios_jtag_debug_module_translator:uav_lock
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                    // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> Nios_jtag_debug_module_translator:uav_read
	wire  [31:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                // Nios_jtag_debug_module_translator:uav_readdata -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // Nios_jtag_debug_module_translator:uav_readdatavalid -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> Nios_jtag_debug_module_translator:uav_debugaccess
	wire   [3:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;              // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> Nios_jtag_debug_module_translator:uav_byteenable
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;            // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;             // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;            // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                                // cmd_xbar_mux:src_endofpacket -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                      // cmd_xbar_mux:src_valid -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                              // cmd_xbar_mux:src_startofpacket -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_src_data;                                                                       // cmd_xbar_mux:src_data -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_src_channel;                                                                    // cmd_xbar_mux:src_channel -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                      // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                          // memory_s1_translator:uav_waitrequest -> memory_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                           // memory_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> memory_s1_translator:uav_burstcount
	wire  [31:0] memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                            // memory_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> memory_s1_translator:uav_writedata
	wire  [16:0] memory_s1_translator_avalon_universal_slave_0_agent_m0_address;                              // memory_s1_translator_avalon_universal_slave_0_agent:m0_address -> memory_s1_translator:uav_address
	wire         memory_s1_translator_avalon_universal_slave_0_agent_m0_write;                                // memory_s1_translator_avalon_universal_slave_0_agent:m0_write -> memory_s1_translator:uav_write
	wire         memory_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                 // memory_s1_translator_avalon_universal_slave_0_agent:m0_lock -> memory_s1_translator:uav_lock
	wire         memory_s1_translator_avalon_universal_slave_0_agent_m0_read;                                 // memory_s1_translator_avalon_universal_slave_0_agent:m0_read -> memory_s1_translator:uav_read
	wire  [31:0] memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                             // memory_s1_translator:uav_readdata -> memory_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                        // memory_s1_translator:uav_readdatavalid -> memory_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                          // memory_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> memory_s1_translator:uav_debugaccess
	wire   [3:0] memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                           // memory_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> memory_s1_translator:uav_byteenable
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                   // memory_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                         // memory_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                 // memory_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                          // memory_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                         // memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> memory_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                // memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                      // memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;              // memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                       // memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                      // memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                    // memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                     // memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                    // memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                            // cmd_xbar_mux_001:src_endofpacket -> memory_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                                  // cmd_xbar_mux_001:src_valid -> memory_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                          // cmd_xbar_mux_001:src_startofpacket -> memory_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_001_src_data;                                                                   // cmd_xbar_mux_001:src_data -> memory_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_001_src_channel;                                                                // cmd_xbar_mux_001:src_channel -> memory_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                                  // memory_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // Jtag_avalon_jtag_slave_translator:uav_waitrequest -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> Jtag_avalon_jtag_slave_translator:uav_burstcount
	wire  [31:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> Jtag_avalon_jtag_slave_translator:uav_writedata
	wire  [16:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> Jtag_avalon_jtag_slave_translator:uav_address
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> Jtag_avalon_jtag_slave_translator:uav_write
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> Jtag_avalon_jtag_slave_translator:uav_lock
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> Jtag_avalon_jtag_slave_translator:uav_read
	wire  [31:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // Jtag_avalon_jtag_slave_translator:uav_readdata -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // Jtag_avalon_jtag_slave_translator:uav_readdatavalid -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> Jtag_avalon_jtag_slave_translator:uav_debugaccess
	wire   [3:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> Jtag_avalon_jtag_slave_translator:uav_byteenable
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_002_src_endofpacket;                                                            // cmd_xbar_mux_002:src_endofpacket -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_002_src_valid;                                                                  // cmd_xbar_mux_002:src_valid -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_002_src_startofpacket;                                                          // cmd_xbar_mux_002:src_startofpacket -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_002_src_data;                                                                   // cmd_xbar_mux_002:src_data -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_002_src_channel;                                                                // cmd_xbar_mux_002:src_channel -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_002_src_ready;                                                                  // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire         led1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // led1_s1_translator:uav_waitrequest -> led1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] led1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // led1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> led1_s1_translator:uav_burstcount
	wire  [31:0] led1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // led1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> led1_s1_translator:uav_writedata
	wire  [16:0] led1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // led1_s1_translator_avalon_universal_slave_0_agent:m0_address -> led1_s1_translator:uav_address
	wire         led1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // led1_s1_translator_avalon_universal_slave_0_agent:m0_write -> led1_s1_translator:uav_write
	wire         led1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // led1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> led1_s1_translator:uav_lock
	wire         led1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // led1_s1_translator_avalon_universal_slave_0_agent:m0_read -> led1_s1_translator:uav_read
	wire  [31:0] led1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // led1_s1_translator:uav_readdata -> led1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         led1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // led1_s1_translator:uav_readdatavalid -> led1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         led1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // led1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> led1_s1_translator:uav_debugaccess
	wire   [3:0] led1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // led1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> led1_s1_translator:uav_byteenable
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // led1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // led1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // led1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] led1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // led1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> led1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> led1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> led1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> led1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> led1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // led1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // led1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> led1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // led1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> led1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // led1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> led1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_003_src_endofpacket;                                                            // cmd_xbar_mux_003:src_endofpacket -> led1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_003_src_valid;                                                                  // cmd_xbar_mux_003:src_valid -> led1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_003_src_startofpacket;                                                          // cmd_xbar_mux_003:src_startofpacket -> led1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_003_src_data;                                                                   // cmd_xbar_mux_003:src_data -> led1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_003_src_channel;                                                                // cmd_xbar_mux_003:src_channel -> led1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_003_src_ready;                                                                  // led1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      // pushbuton1_s1_translator:uav_waitrequest -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> pushbuton1_s1_translator:uav_burstcount
	wire  [31:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> pushbuton1_s1_translator:uav_writedata
	wire  [16:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_address;                          // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_address -> pushbuton1_s1_translator:uav_address
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_write;                            // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_write -> pushbuton1_s1_translator:uav_write
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> pushbuton1_s1_translator:uav_lock
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_read;                             // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_read -> pushbuton1_s1_translator:uav_read
	wire  [31:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         // pushbuton1_s1_translator:uav_readdata -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    // pushbuton1_s1_translator:uav_readdatavalid -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pushbuton1_s1_translator:uav_debugaccess
	wire   [3:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       // pushbuton1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> pushbuton1_s1_translator:uav_byteenable
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     // pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            // pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  // pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          // pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   // pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_004_src_endofpacket;                                                            // cmd_xbar_mux_004:src_endofpacket -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_004_src_valid;                                                                  // cmd_xbar_mux_004:src_valid -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_004_src_startofpacket;                                                          // cmd_xbar_mux_004:src_startofpacket -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_004_src_data;                                                                   // cmd_xbar_mux_004:src_data -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_004_src_channel;                                                                // cmd_xbar_mux_004:src_channel -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_004_src_ready;                                                                  // pushbuton1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire         led2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // led2_s1_translator:uav_waitrequest -> led2_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] led2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // led2_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> led2_s1_translator:uav_burstcount
	wire  [31:0] led2_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // led2_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> led2_s1_translator:uav_writedata
	wire  [16:0] led2_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // led2_s1_translator_avalon_universal_slave_0_agent:m0_address -> led2_s1_translator:uav_address
	wire         led2_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // led2_s1_translator_avalon_universal_slave_0_agent:m0_write -> led2_s1_translator:uav_write
	wire         led2_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // led2_s1_translator_avalon_universal_slave_0_agent:m0_lock -> led2_s1_translator:uav_lock
	wire         led2_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // led2_s1_translator_avalon_universal_slave_0_agent:m0_read -> led2_s1_translator:uav_read
	wire  [31:0] led2_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // led2_s1_translator:uav_readdata -> led2_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         led2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // led2_s1_translator:uav_readdatavalid -> led2_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         led2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // led2_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> led2_s1_translator:uav_debugaccess
	wire   [3:0] led2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // led2_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> led2_s1_translator:uav_byteenable
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // led2_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // led2_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // led2_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] led2_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // led2_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> led2_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> led2_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> led2_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> led2_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> led2_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // led2_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // led2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> led2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // led2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> led2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // led2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> led2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_005_src_endofpacket;                                                            // cmd_xbar_mux_005:src_endofpacket -> led2_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_005_src_valid;                                                                  // cmd_xbar_mux_005:src_valid -> led2_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_005_src_startofpacket;                                                          // cmd_xbar_mux_005:src_startofpacket -> led2_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_005_src_data;                                                                   // cmd_xbar_mux_005:src_data -> led2_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_005_src_channel;                                                                // cmd_xbar_mux_005:src_channel -> led2_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_005_src_ready;                                                                  // led2_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_005:src_ready
	wire         led3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // led3_s1_translator:uav_waitrequest -> led3_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] led3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // led3_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> led3_s1_translator:uav_burstcount
	wire  [31:0] led3_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // led3_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> led3_s1_translator:uav_writedata
	wire  [16:0] led3_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // led3_s1_translator_avalon_universal_slave_0_agent:m0_address -> led3_s1_translator:uav_address
	wire         led3_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // led3_s1_translator_avalon_universal_slave_0_agent:m0_write -> led3_s1_translator:uav_write
	wire         led3_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // led3_s1_translator_avalon_universal_slave_0_agent:m0_lock -> led3_s1_translator:uav_lock
	wire         led3_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // led3_s1_translator_avalon_universal_slave_0_agent:m0_read -> led3_s1_translator:uav_read
	wire  [31:0] led3_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // led3_s1_translator:uav_readdata -> led3_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         led3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // led3_s1_translator:uav_readdatavalid -> led3_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         led3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // led3_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> led3_s1_translator:uav_debugaccess
	wire   [3:0] led3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // led3_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> led3_s1_translator:uav_byteenable
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // led3_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // led3_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // led3_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] led3_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // led3_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> led3_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> led3_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> led3_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> led3_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> led3_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // led3_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // led3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> led3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // led3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> led3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // led3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> led3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_006_src_endofpacket;                                                            // cmd_xbar_mux_006:src_endofpacket -> led3_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_006_src_valid;                                                                  // cmd_xbar_mux_006:src_valid -> led3_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_006_src_startofpacket;                                                          // cmd_xbar_mux_006:src_startofpacket -> led3_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_006_src_data;                                                                   // cmd_xbar_mux_006:src_data -> led3_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_006_src_channel;                                                                // cmd_xbar_mux_006:src_channel -> led3_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_006_src_ready;                                                                  // led3_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_006:src_ready
	wire         led4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // led4_s1_translator:uav_waitrequest -> led4_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] led4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // led4_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> led4_s1_translator:uav_burstcount
	wire  [31:0] led4_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // led4_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> led4_s1_translator:uav_writedata
	wire  [16:0] led4_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // led4_s1_translator_avalon_universal_slave_0_agent:m0_address -> led4_s1_translator:uav_address
	wire         led4_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // led4_s1_translator_avalon_universal_slave_0_agent:m0_write -> led4_s1_translator:uav_write
	wire         led4_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // led4_s1_translator_avalon_universal_slave_0_agent:m0_lock -> led4_s1_translator:uav_lock
	wire         led4_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // led4_s1_translator_avalon_universal_slave_0_agent:m0_read -> led4_s1_translator:uav_read
	wire  [31:0] led4_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // led4_s1_translator:uav_readdata -> led4_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         led4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // led4_s1_translator:uav_readdatavalid -> led4_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         led4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // led4_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> led4_s1_translator:uav_debugaccess
	wire   [3:0] led4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // led4_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> led4_s1_translator:uav_byteenable
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // led4_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // led4_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // led4_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] led4_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // led4_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> led4_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> led4_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> led4_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> led4_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> led4_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // led4_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // led4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> led4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // led4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> led4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // led4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> led4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_007_src_endofpacket;                                                            // cmd_xbar_mux_007:src_endofpacket -> led4_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_007_src_valid;                                                                  // cmd_xbar_mux_007:src_valid -> led4_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_007_src_startofpacket;                                                          // cmd_xbar_mux_007:src_startofpacket -> led4_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_007_src_data;                                                                   // cmd_xbar_mux_007:src_data -> led4_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_007_src_channel;                                                                // cmd_xbar_mux_007:src_channel -> led4_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_007_src_ready;                                                                  // led4_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_007:src_ready
	wire         led5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // led5_s1_translator:uav_waitrequest -> led5_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] led5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // led5_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> led5_s1_translator:uav_burstcount
	wire  [31:0] led5_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // led5_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> led5_s1_translator:uav_writedata
	wire  [16:0] led5_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // led5_s1_translator_avalon_universal_slave_0_agent:m0_address -> led5_s1_translator:uav_address
	wire         led5_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // led5_s1_translator_avalon_universal_slave_0_agent:m0_write -> led5_s1_translator:uav_write
	wire         led5_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // led5_s1_translator_avalon_universal_slave_0_agent:m0_lock -> led5_s1_translator:uav_lock
	wire         led5_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // led5_s1_translator_avalon_universal_slave_0_agent:m0_read -> led5_s1_translator:uav_read
	wire  [31:0] led5_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // led5_s1_translator:uav_readdata -> led5_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         led5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // led5_s1_translator:uav_readdatavalid -> led5_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         led5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // led5_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> led5_s1_translator:uav_debugaccess
	wire   [3:0] led5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // led5_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> led5_s1_translator:uav_byteenable
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // led5_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // led5_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // led5_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] led5_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // led5_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> led5_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> led5_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> led5_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> led5_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> led5_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // led5_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // led5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> led5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // led5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> led5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // led5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> led5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_008_src_endofpacket;                                                            // cmd_xbar_mux_008:src_endofpacket -> led5_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_008_src_valid;                                                                  // cmd_xbar_mux_008:src_valid -> led5_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_008_src_startofpacket;                                                          // cmd_xbar_mux_008:src_startofpacket -> led5_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_008_src_data;                                                                   // cmd_xbar_mux_008:src_data -> led5_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_008_src_channel;                                                                // cmd_xbar_mux_008:src_channel -> led5_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_008_src_ready;                                                                  // led5_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_008:src_ready
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      // pushbuton2_s1_translator:uav_waitrequest -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> pushbuton2_s1_translator:uav_burstcount
	wire  [31:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> pushbuton2_s1_translator:uav_writedata
	wire  [16:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_address;                          // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_address -> pushbuton2_s1_translator:uav_address
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_write;                            // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_write -> pushbuton2_s1_translator:uav_write
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_lock -> pushbuton2_s1_translator:uav_lock
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_read;                             // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_read -> pushbuton2_s1_translator:uav_read
	wire  [31:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         // pushbuton2_s1_translator:uav_readdata -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    // pushbuton2_s1_translator:uav_readdatavalid -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pushbuton2_s1_translator:uav_debugaccess
	wire   [3:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       // pushbuton2_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> pushbuton2_s1_translator:uav_byteenable
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     // pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            // pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  // pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          // pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   // pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_009_src_endofpacket;                                                            // cmd_xbar_mux_009:src_endofpacket -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_009_src_valid;                                                                  // cmd_xbar_mux_009:src_valid -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_009_src_startofpacket;                                                          // cmd_xbar_mux_009:src_startofpacket -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_009_src_data;                                                                   // cmd_xbar_mux_009:src_data -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_009_src_channel;                                                                // cmd_xbar_mux_009:src_channel -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_009_src_ready;                                                                  // pushbuton2_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_009:src_ready
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      // pushbuton3_s1_translator:uav_waitrequest -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> pushbuton3_s1_translator:uav_burstcount
	wire  [31:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> pushbuton3_s1_translator:uav_writedata
	wire  [16:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_address;                          // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_address -> pushbuton3_s1_translator:uav_address
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_write;                            // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_write -> pushbuton3_s1_translator:uav_write
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_lock -> pushbuton3_s1_translator:uav_lock
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_read;                             // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_read -> pushbuton3_s1_translator:uav_read
	wire  [31:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         // pushbuton3_s1_translator:uav_readdata -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    // pushbuton3_s1_translator:uav_readdatavalid -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pushbuton3_s1_translator:uav_debugaccess
	wire   [3:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       // pushbuton3_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> pushbuton3_s1_translator:uav_byteenable
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     // pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            // pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  // pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          // pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   // pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_010_src_endofpacket;                                                            // cmd_xbar_mux_010:src_endofpacket -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_010_src_valid;                                                                  // cmd_xbar_mux_010:src_valid -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_010_src_startofpacket;                                                          // cmd_xbar_mux_010:src_startofpacket -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_010_src_data;                                                                   // cmd_xbar_mux_010:src_data -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_010_src_channel;                                                                // cmd_xbar_mux_010:src_channel -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_010_src_ready;                                                                  // pushbuton3_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_010:src_ready
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      // pushbuton4_s1_translator:uav_waitrequest -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> pushbuton4_s1_translator:uav_burstcount
	wire  [31:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> pushbuton4_s1_translator:uav_writedata
	wire  [16:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_address;                          // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_address -> pushbuton4_s1_translator:uav_address
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_write;                            // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_write -> pushbuton4_s1_translator:uav_write
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_lock -> pushbuton4_s1_translator:uav_lock
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_read;                             // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_read -> pushbuton4_s1_translator:uav_read
	wire  [31:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         // pushbuton4_s1_translator:uav_readdata -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    // pushbuton4_s1_translator:uav_readdatavalid -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pushbuton4_s1_translator:uav_debugaccess
	wire   [3:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       // pushbuton4_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> pushbuton4_s1_translator:uav_byteenable
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [95:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     // pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            // pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  // pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          // pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [95:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   // pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_011_src_endofpacket;                                                            // cmd_xbar_mux_011:src_endofpacket -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_011_src_valid;                                                                  // cmd_xbar_mux_011:src_valid -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_011_src_startofpacket;                                                          // cmd_xbar_mux_011:src_startofpacket -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [94:0] cmd_xbar_mux_011_src_data;                                                                   // cmd_xbar_mux_011:src_data -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_011_src_channel;                                                                // cmd_xbar_mux_011:src_channel -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_011_src_ready;                                                                  // pushbuton4_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_011:src_ready
	wire         nios_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;           // Nios_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         nios_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                 // Nios_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         nios_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;         // Nios_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [94:0] nios_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                  // Nios_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         nios_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                 // addr_router:sink_ready -> Nios_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_src_endofpacket;                                                                 // addr_router:src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         addr_router_src_valid;                                                                       // addr_router:src_valid -> cmd_xbar_demux:sink_valid
	wire         addr_router_src_startofpacket;                                                               // addr_router:src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [94:0] addr_router_src_data;                                                                        // addr_router:src_data -> cmd_xbar_demux:sink_data
	wire  [11:0] addr_router_src_channel;                                                                     // addr_router:src_channel -> cmd_xbar_demux:sink_channel
	wire         addr_router_src_ready;                                                                       // cmd_xbar_demux:sink_ready -> addr_router:src_ready
	wire         nios_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                  // Nios_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_001:sink_endofpacket
	wire         nios_data_master_translator_avalon_universal_master_0_agent_cp_valid;                        // Nios_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_001:sink_valid
	wire         nios_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                // Nios_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_001:sink_startofpacket
	wire  [94:0] nios_data_master_translator_avalon_universal_master_0_agent_cp_data;                         // Nios_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_001:sink_data
	wire         nios_data_master_translator_avalon_universal_master_0_agent_cp_ready;                        // addr_router_001:sink_ready -> Nios_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_001_src_endofpacket;                                                             // addr_router_001:src_endofpacket -> cmd_xbar_demux_001:sink_endofpacket
	wire         addr_router_001_src_valid;                                                                   // addr_router_001:src_valid -> cmd_xbar_demux_001:sink_valid
	wire         addr_router_001_src_startofpacket;                                                           // addr_router_001:src_startofpacket -> cmd_xbar_demux_001:sink_startofpacket
	wire  [94:0] addr_router_001_src_data;                                                                    // addr_router_001:src_data -> cmd_xbar_demux_001:sink_data
	wire  [11:0] addr_router_001_src_channel;                                                                 // addr_router_001:src_channel -> cmd_xbar_demux_001:sink_channel
	wire         addr_router_001_src_ready;                                                                   // cmd_xbar_demux_001:sink_ready -> addr_router_001:src_ready
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                   // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [94:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                    // Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router:sink_ready -> Nios_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                                   // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                         // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                                 // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [94:0] id_router_src_data;                                                                          // id_router:src_data -> rsp_xbar_demux:sink_data
	wire  [11:0] id_router_src_channel;                                                                       // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                         // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                          // memory_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                // memory_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                        // memory_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [94:0] memory_s1_translator_avalon_universal_slave_0_agent_rp_data;                                 // memory_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         memory_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                // id_router_001:sink_ready -> memory_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                               // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                     // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                             // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [94:0] id_router_001_src_data;                                                                      // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire  [11:0] id_router_001_src_channel;                                                                   // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                     // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [94:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire         jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_002:sink_ready -> Jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_002_src_endofpacket;                                                               // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire         id_router_002_src_valid;                                                                     // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire         id_router_002_src_startofpacket;                                                             // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [94:0] id_router_002_src_data;                                                                      // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire  [11:0] id_router_002_src_channel;                                                                   // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire         id_router_002_src_ready;                                                                     // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // led1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // led1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // led1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [94:0] led1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // led1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire         led1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_003:sink_ready -> led1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_003_src_endofpacket;                                                               // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire         id_router_003_src_valid;                                                                     // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire         id_router_003_src_startofpacket;                                                             // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [94:0] id_router_003_src_data;                                                                      // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire  [11:0] id_router_003_src_channel;                                                                   // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire         id_router_003_src_ready;                                                                     // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire  [94:0] pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_data;                             // pushbuton1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire         pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            // id_router_004:sink_ready -> pushbuton1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_004_src_endofpacket;                                                               // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire         id_router_004_src_valid;                                                                     // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire         id_router_004_src_startofpacket;                                                             // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [94:0] id_router_004_src_data;                                                                      // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire  [11:0] id_router_004_src_channel;                                                                   // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire         id_router_004_src_ready;                                                                     // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // led2_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // led2_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // led2_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire  [94:0] led2_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // led2_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire         led2_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_005:sink_ready -> led2_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_005_src_endofpacket;                                                               // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire         id_router_005_src_valid;                                                                     // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire         id_router_005_src_startofpacket;                                                             // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire  [94:0] id_router_005_src_data;                                                                      // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire  [11:0] id_router_005_src_channel;                                                                   // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire         id_router_005_src_ready;                                                                     // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // led3_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // led3_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // led3_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire  [94:0] led3_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // led3_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire         led3_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_006:sink_ready -> led3_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_006_src_endofpacket;                                                               // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire         id_router_006_src_valid;                                                                     // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire         id_router_006_src_startofpacket;                                                             // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire  [94:0] id_router_006_src_data;                                                                      // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire  [11:0] id_router_006_src_channel;                                                                   // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire         id_router_006_src_ready;                                                                     // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // led4_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_007:sink_endofpacket
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // led4_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_007:sink_valid
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // led4_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_007:sink_startofpacket
	wire  [94:0] led4_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // led4_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_007:sink_data
	wire         led4_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_007:sink_ready -> led4_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_007_src_endofpacket;                                                               // id_router_007:src_endofpacket -> rsp_xbar_demux_007:sink_endofpacket
	wire         id_router_007_src_valid;                                                                     // id_router_007:src_valid -> rsp_xbar_demux_007:sink_valid
	wire         id_router_007_src_startofpacket;                                                             // id_router_007:src_startofpacket -> rsp_xbar_demux_007:sink_startofpacket
	wire  [94:0] id_router_007_src_data;                                                                      // id_router_007:src_data -> rsp_xbar_demux_007:sink_data
	wire  [11:0] id_router_007_src_channel;                                                                   // id_router_007:src_channel -> rsp_xbar_demux_007:sink_channel
	wire         id_router_007_src_ready;                                                                     // rsp_xbar_demux_007:sink_ready -> id_router_007:src_ready
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // led5_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_008:sink_endofpacket
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // led5_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_008:sink_valid
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // led5_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_008:sink_startofpacket
	wire  [94:0] led5_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // led5_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_008:sink_data
	wire         led5_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_008:sink_ready -> led5_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_008_src_endofpacket;                                                               // id_router_008:src_endofpacket -> rsp_xbar_demux_008:sink_endofpacket
	wire         id_router_008_src_valid;                                                                     // id_router_008:src_valid -> rsp_xbar_demux_008:sink_valid
	wire         id_router_008_src_startofpacket;                                                             // id_router_008:src_startofpacket -> rsp_xbar_demux_008:sink_startofpacket
	wire  [94:0] id_router_008_src_data;                                                                      // id_router_008:src_data -> rsp_xbar_demux_008:sink_data
	wire  [11:0] id_router_008_src_channel;                                                                   // id_router_008:src_channel -> rsp_xbar_demux_008:sink_channel
	wire         id_router_008_src_ready;                                                                     // rsp_xbar_demux_008:sink_ready -> id_router_008:src_ready
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_009:sink_endofpacket
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_009:sink_valid
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_009:sink_startofpacket
	wire  [94:0] pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_data;                             // pushbuton2_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_009:sink_data
	wire         pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            // id_router_009:sink_ready -> pushbuton2_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_009_src_endofpacket;                                                               // id_router_009:src_endofpacket -> rsp_xbar_demux_009:sink_endofpacket
	wire         id_router_009_src_valid;                                                                     // id_router_009:src_valid -> rsp_xbar_demux_009:sink_valid
	wire         id_router_009_src_startofpacket;                                                             // id_router_009:src_startofpacket -> rsp_xbar_demux_009:sink_startofpacket
	wire  [94:0] id_router_009_src_data;                                                                      // id_router_009:src_data -> rsp_xbar_demux_009:sink_data
	wire  [11:0] id_router_009_src_channel;                                                                   // id_router_009:src_channel -> rsp_xbar_demux_009:sink_channel
	wire         id_router_009_src_ready;                                                                     // rsp_xbar_demux_009:sink_ready -> id_router_009:src_ready
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_010:sink_endofpacket
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_010:sink_valid
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_010:sink_startofpacket
	wire  [94:0] pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_data;                             // pushbuton3_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_010:sink_data
	wire         pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            // id_router_010:sink_ready -> pushbuton3_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_010_src_endofpacket;                                                               // id_router_010:src_endofpacket -> rsp_xbar_demux_010:sink_endofpacket
	wire         id_router_010_src_valid;                                                                     // id_router_010:src_valid -> rsp_xbar_demux_010:sink_valid
	wire         id_router_010_src_startofpacket;                                                             // id_router_010:src_startofpacket -> rsp_xbar_demux_010:sink_startofpacket
	wire  [94:0] id_router_010_src_data;                                                                      // id_router_010:src_data -> rsp_xbar_demux_010:sink_data
	wire  [11:0] id_router_010_src_channel;                                                                   // id_router_010:src_channel -> rsp_xbar_demux_010:sink_channel
	wire         id_router_010_src_ready;                                                                     // rsp_xbar_demux_010:sink_ready -> id_router_010:src_ready
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_011:sink_endofpacket
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_011:sink_valid
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_011:sink_startofpacket
	wire  [94:0] pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_data;                             // pushbuton4_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_011:sink_data
	wire         pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            // id_router_011:sink_ready -> pushbuton4_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_011_src_endofpacket;                                                               // id_router_011:src_endofpacket -> rsp_xbar_demux_011:sink_endofpacket
	wire         id_router_011_src_valid;                                                                     // id_router_011:src_valid -> rsp_xbar_demux_011:sink_valid
	wire         id_router_011_src_startofpacket;                                                             // id_router_011:src_startofpacket -> rsp_xbar_demux_011:sink_startofpacket
	wire  [94:0] id_router_011_src_data;                                                                      // id_router_011:src_data -> rsp_xbar_demux_011:sink_data
	wire  [11:0] id_router_011_src_channel;                                                                   // id_router_011:src_channel -> rsp_xbar_demux_011:sink_channel
	wire         id_router_011_src_ready;                                                                     // rsp_xbar_demux_011:sink_ready -> id_router_011:src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                             // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                   // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                           // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_src0_data;                                                                    // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire  [11:0] cmd_xbar_demux_src0_channel;                                                                 // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                   // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                             // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                   // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                           // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_src1_data;                                                                    // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire  [11:0] cmd_xbar_demux_src1_channel;                                                                 // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                   // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         cmd_xbar_demux_001_src0_endofpacket;                                                         // cmd_xbar_demux_001:src0_endofpacket -> cmd_xbar_mux:sink1_endofpacket
	wire         cmd_xbar_demux_001_src0_valid;                                                               // cmd_xbar_demux_001:src0_valid -> cmd_xbar_mux:sink1_valid
	wire         cmd_xbar_demux_001_src0_startofpacket;                                                       // cmd_xbar_demux_001:src0_startofpacket -> cmd_xbar_mux:sink1_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src0_data;                                                                // cmd_xbar_demux_001:src0_data -> cmd_xbar_mux:sink1_data
	wire  [11:0] cmd_xbar_demux_001_src0_channel;                                                             // cmd_xbar_demux_001:src0_channel -> cmd_xbar_mux:sink1_channel
	wire         cmd_xbar_demux_001_src0_ready;                                                               // cmd_xbar_mux:sink1_ready -> cmd_xbar_demux_001:src0_ready
	wire         cmd_xbar_demux_001_src1_endofpacket;                                                         // cmd_xbar_demux_001:src1_endofpacket -> cmd_xbar_mux_001:sink1_endofpacket
	wire         cmd_xbar_demux_001_src1_valid;                                                               // cmd_xbar_demux_001:src1_valid -> cmd_xbar_mux_001:sink1_valid
	wire         cmd_xbar_demux_001_src1_startofpacket;                                                       // cmd_xbar_demux_001:src1_startofpacket -> cmd_xbar_mux_001:sink1_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src1_data;                                                                // cmd_xbar_demux_001:src1_data -> cmd_xbar_mux_001:sink1_data
	wire  [11:0] cmd_xbar_demux_001_src1_channel;                                                             // cmd_xbar_demux_001:src1_channel -> cmd_xbar_mux_001:sink1_channel
	wire         cmd_xbar_demux_001_src1_ready;                                                               // cmd_xbar_mux_001:sink1_ready -> cmd_xbar_demux_001:src1_ready
	wire         cmd_xbar_demux_001_src2_endofpacket;                                                         // cmd_xbar_demux_001:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire         cmd_xbar_demux_001_src2_valid;                                                               // cmd_xbar_demux_001:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire         cmd_xbar_demux_001_src2_startofpacket;                                                       // cmd_xbar_demux_001:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src2_data;                                                                // cmd_xbar_demux_001:src2_data -> cmd_xbar_mux_002:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src2_channel;                                                             // cmd_xbar_demux_001:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire         cmd_xbar_demux_001_src2_ready;                                                               // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux_001:src2_ready
	wire         cmd_xbar_demux_001_src3_endofpacket;                                                         // cmd_xbar_demux_001:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire         cmd_xbar_demux_001_src3_valid;                                                               // cmd_xbar_demux_001:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire         cmd_xbar_demux_001_src3_startofpacket;                                                       // cmd_xbar_demux_001:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src3_data;                                                                // cmd_xbar_demux_001:src3_data -> cmd_xbar_mux_003:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src3_channel;                                                             // cmd_xbar_demux_001:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire         cmd_xbar_demux_001_src3_ready;                                                               // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux_001:src3_ready
	wire         cmd_xbar_demux_001_src4_endofpacket;                                                         // cmd_xbar_demux_001:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire         cmd_xbar_demux_001_src4_valid;                                                               // cmd_xbar_demux_001:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire         cmd_xbar_demux_001_src4_startofpacket;                                                       // cmd_xbar_demux_001:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src4_data;                                                                // cmd_xbar_demux_001:src4_data -> cmd_xbar_mux_004:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src4_channel;                                                             // cmd_xbar_demux_001:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire         cmd_xbar_demux_001_src4_ready;                                                               // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux_001:src4_ready
	wire         cmd_xbar_demux_001_src5_endofpacket;                                                         // cmd_xbar_demux_001:src5_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire         cmd_xbar_demux_001_src5_valid;                                                               // cmd_xbar_demux_001:src5_valid -> cmd_xbar_mux_005:sink0_valid
	wire         cmd_xbar_demux_001_src5_startofpacket;                                                       // cmd_xbar_demux_001:src5_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src5_data;                                                                // cmd_xbar_demux_001:src5_data -> cmd_xbar_mux_005:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src5_channel;                                                             // cmd_xbar_demux_001:src5_channel -> cmd_xbar_mux_005:sink0_channel
	wire         cmd_xbar_demux_001_src5_ready;                                                               // cmd_xbar_mux_005:sink0_ready -> cmd_xbar_demux_001:src5_ready
	wire         cmd_xbar_demux_001_src6_endofpacket;                                                         // cmd_xbar_demux_001:src6_endofpacket -> cmd_xbar_mux_006:sink0_endofpacket
	wire         cmd_xbar_demux_001_src6_valid;                                                               // cmd_xbar_demux_001:src6_valid -> cmd_xbar_mux_006:sink0_valid
	wire         cmd_xbar_demux_001_src6_startofpacket;                                                       // cmd_xbar_demux_001:src6_startofpacket -> cmd_xbar_mux_006:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src6_data;                                                                // cmd_xbar_demux_001:src6_data -> cmd_xbar_mux_006:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src6_channel;                                                             // cmd_xbar_demux_001:src6_channel -> cmd_xbar_mux_006:sink0_channel
	wire         cmd_xbar_demux_001_src6_ready;                                                               // cmd_xbar_mux_006:sink0_ready -> cmd_xbar_demux_001:src6_ready
	wire         cmd_xbar_demux_001_src7_endofpacket;                                                         // cmd_xbar_demux_001:src7_endofpacket -> cmd_xbar_mux_007:sink0_endofpacket
	wire         cmd_xbar_demux_001_src7_valid;                                                               // cmd_xbar_demux_001:src7_valid -> cmd_xbar_mux_007:sink0_valid
	wire         cmd_xbar_demux_001_src7_startofpacket;                                                       // cmd_xbar_demux_001:src7_startofpacket -> cmd_xbar_mux_007:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src7_data;                                                                // cmd_xbar_demux_001:src7_data -> cmd_xbar_mux_007:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src7_channel;                                                             // cmd_xbar_demux_001:src7_channel -> cmd_xbar_mux_007:sink0_channel
	wire         cmd_xbar_demux_001_src7_ready;                                                               // cmd_xbar_mux_007:sink0_ready -> cmd_xbar_demux_001:src7_ready
	wire         cmd_xbar_demux_001_src8_endofpacket;                                                         // cmd_xbar_demux_001:src8_endofpacket -> cmd_xbar_mux_008:sink0_endofpacket
	wire         cmd_xbar_demux_001_src8_valid;                                                               // cmd_xbar_demux_001:src8_valid -> cmd_xbar_mux_008:sink0_valid
	wire         cmd_xbar_demux_001_src8_startofpacket;                                                       // cmd_xbar_demux_001:src8_startofpacket -> cmd_xbar_mux_008:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src8_data;                                                                // cmd_xbar_demux_001:src8_data -> cmd_xbar_mux_008:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src8_channel;                                                             // cmd_xbar_demux_001:src8_channel -> cmd_xbar_mux_008:sink0_channel
	wire         cmd_xbar_demux_001_src8_ready;                                                               // cmd_xbar_mux_008:sink0_ready -> cmd_xbar_demux_001:src8_ready
	wire         cmd_xbar_demux_001_src9_endofpacket;                                                         // cmd_xbar_demux_001:src9_endofpacket -> cmd_xbar_mux_009:sink0_endofpacket
	wire         cmd_xbar_demux_001_src9_valid;                                                               // cmd_xbar_demux_001:src9_valid -> cmd_xbar_mux_009:sink0_valid
	wire         cmd_xbar_demux_001_src9_startofpacket;                                                       // cmd_xbar_demux_001:src9_startofpacket -> cmd_xbar_mux_009:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src9_data;                                                                // cmd_xbar_demux_001:src9_data -> cmd_xbar_mux_009:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src9_channel;                                                             // cmd_xbar_demux_001:src9_channel -> cmd_xbar_mux_009:sink0_channel
	wire         cmd_xbar_demux_001_src9_ready;                                                               // cmd_xbar_mux_009:sink0_ready -> cmd_xbar_demux_001:src9_ready
	wire         cmd_xbar_demux_001_src10_endofpacket;                                                        // cmd_xbar_demux_001:src10_endofpacket -> cmd_xbar_mux_010:sink0_endofpacket
	wire         cmd_xbar_demux_001_src10_valid;                                                              // cmd_xbar_demux_001:src10_valid -> cmd_xbar_mux_010:sink0_valid
	wire         cmd_xbar_demux_001_src10_startofpacket;                                                      // cmd_xbar_demux_001:src10_startofpacket -> cmd_xbar_mux_010:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src10_data;                                                               // cmd_xbar_demux_001:src10_data -> cmd_xbar_mux_010:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src10_channel;                                                            // cmd_xbar_demux_001:src10_channel -> cmd_xbar_mux_010:sink0_channel
	wire         cmd_xbar_demux_001_src10_ready;                                                              // cmd_xbar_mux_010:sink0_ready -> cmd_xbar_demux_001:src10_ready
	wire         cmd_xbar_demux_001_src11_endofpacket;                                                        // cmd_xbar_demux_001:src11_endofpacket -> cmd_xbar_mux_011:sink0_endofpacket
	wire         cmd_xbar_demux_001_src11_valid;                                                              // cmd_xbar_demux_001:src11_valid -> cmd_xbar_mux_011:sink0_valid
	wire         cmd_xbar_demux_001_src11_startofpacket;                                                      // cmd_xbar_demux_001:src11_startofpacket -> cmd_xbar_mux_011:sink0_startofpacket
	wire  [94:0] cmd_xbar_demux_001_src11_data;                                                               // cmd_xbar_demux_001:src11_data -> cmd_xbar_mux_011:sink0_data
	wire  [11:0] cmd_xbar_demux_001_src11_channel;                                                            // cmd_xbar_demux_001:src11_channel -> cmd_xbar_mux_011:sink0_channel
	wire         cmd_xbar_demux_001_src11_ready;                                                              // cmd_xbar_mux_011:sink0_ready -> cmd_xbar_demux_001:src11_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                             // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                   // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                           // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [94:0] rsp_xbar_demux_src0_data;                                                                    // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire  [11:0] rsp_xbar_demux_src0_channel;                                                                 // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                   // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_src1_endofpacket;                                                             // rsp_xbar_demux:src1_endofpacket -> rsp_xbar_mux_001:sink0_endofpacket
	wire         rsp_xbar_demux_src1_valid;                                                                   // rsp_xbar_demux:src1_valid -> rsp_xbar_mux_001:sink0_valid
	wire         rsp_xbar_demux_src1_startofpacket;                                                           // rsp_xbar_demux:src1_startofpacket -> rsp_xbar_mux_001:sink0_startofpacket
	wire  [94:0] rsp_xbar_demux_src1_data;                                                                    // rsp_xbar_demux:src1_data -> rsp_xbar_mux_001:sink0_data
	wire  [11:0] rsp_xbar_demux_src1_channel;                                                                 // rsp_xbar_demux:src1_channel -> rsp_xbar_mux_001:sink0_channel
	wire         rsp_xbar_demux_src1_ready;                                                                   // rsp_xbar_mux_001:sink0_ready -> rsp_xbar_demux:src1_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                         // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                               // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                       // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [94:0] rsp_xbar_demux_001_src0_data;                                                                // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire  [11:0] rsp_xbar_demux_001_src0_channel;                                                             // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                               // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire         rsp_xbar_demux_001_src1_endofpacket;                                                         // rsp_xbar_demux_001:src1_endofpacket -> rsp_xbar_mux_001:sink1_endofpacket
	wire         rsp_xbar_demux_001_src1_valid;                                                               // rsp_xbar_demux_001:src1_valid -> rsp_xbar_mux_001:sink1_valid
	wire         rsp_xbar_demux_001_src1_startofpacket;                                                       // rsp_xbar_demux_001:src1_startofpacket -> rsp_xbar_mux_001:sink1_startofpacket
	wire  [94:0] rsp_xbar_demux_001_src1_data;                                                                // rsp_xbar_demux_001:src1_data -> rsp_xbar_mux_001:sink1_data
	wire  [11:0] rsp_xbar_demux_001_src1_channel;                                                             // rsp_xbar_demux_001:src1_channel -> rsp_xbar_mux_001:sink1_channel
	wire         rsp_xbar_demux_001_src1_ready;                                                               // rsp_xbar_mux_001:sink1_ready -> rsp_xbar_demux_001:src1_ready
	wire         rsp_xbar_demux_002_src0_endofpacket;                                                         // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux_001:sink2_endofpacket
	wire         rsp_xbar_demux_002_src0_valid;                                                               // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux_001:sink2_valid
	wire         rsp_xbar_demux_002_src0_startofpacket;                                                       // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux_001:sink2_startofpacket
	wire  [94:0] rsp_xbar_demux_002_src0_data;                                                                // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux_001:sink2_data
	wire  [11:0] rsp_xbar_demux_002_src0_channel;                                                             // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux_001:sink2_channel
	wire         rsp_xbar_demux_002_src0_ready;                                                               // rsp_xbar_mux_001:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire         rsp_xbar_demux_003_src0_endofpacket;                                                         // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux_001:sink3_endofpacket
	wire         rsp_xbar_demux_003_src0_valid;                                                               // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux_001:sink3_valid
	wire         rsp_xbar_demux_003_src0_startofpacket;                                                       // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux_001:sink3_startofpacket
	wire  [94:0] rsp_xbar_demux_003_src0_data;                                                                // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux_001:sink3_data
	wire  [11:0] rsp_xbar_demux_003_src0_channel;                                                             // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux_001:sink3_channel
	wire         rsp_xbar_demux_003_src0_ready;                                                               // rsp_xbar_mux_001:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire         rsp_xbar_demux_004_src0_endofpacket;                                                         // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux_001:sink4_endofpacket
	wire         rsp_xbar_demux_004_src0_valid;                                                               // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux_001:sink4_valid
	wire         rsp_xbar_demux_004_src0_startofpacket;                                                       // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux_001:sink4_startofpacket
	wire  [94:0] rsp_xbar_demux_004_src0_data;                                                                // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux_001:sink4_data
	wire  [11:0] rsp_xbar_demux_004_src0_channel;                                                             // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux_001:sink4_channel
	wire         rsp_xbar_demux_004_src0_ready;                                                               // rsp_xbar_mux_001:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire         rsp_xbar_demux_005_src0_endofpacket;                                                         // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux_001:sink5_endofpacket
	wire         rsp_xbar_demux_005_src0_valid;                                                               // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux_001:sink5_valid
	wire         rsp_xbar_demux_005_src0_startofpacket;                                                       // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux_001:sink5_startofpacket
	wire  [94:0] rsp_xbar_demux_005_src0_data;                                                                // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux_001:sink5_data
	wire  [11:0] rsp_xbar_demux_005_src0_channel;                                                             // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux_001:sink5_channel
	wire         rsp_xbar_demux_005_src0_ready;                                                               // rsp_xbar_mux_001:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire         rsp_xbar_demux_006_src0_endofpacket;                                                         // rsp_xbar_demux_006:src0_endofpacket -> rsp_xbar_mux_001:sink6_endofpacket
	wire         rsp_xbar_demux_006_src0_valid;                                                               // rsp_xbar_demux_006:src0_valid -> rsp_xbar_mux_001:sink6_valid
	wire         rsp_xbar_demux_006_src0_startofpacket;                                                       // rsp_xbar_demux_006:src0_startofpacket -> rsp_xbar_mux_001:sink6_startofpacket
	wire  [94:0] rsp_xbar_demux_006_src0_data;                                                                // rsp_xbar_demux_006:src0_data -> rsp_xbar_mux_001:sink6_data
	wire  [11:0] rsp_xbar_demux_006_src0_channel;                                                             // rsp_xbar_demux_006:src0_channel -> rsp_xbar_mux_001:sink6_channel
	wire         rsp_xbar_demux_006_src0_ready;                                                               // rsp_xbar_mux_001:sink6_ready -> rsp_xbar_demux_006:src0_ready
	wire         rsp_xbar_demux_007_src0_endofpacket;                                                         // rsp_xbar_demux_007:src0_endofpacket -> rsp_xbar_mux_001:sink7_endofpacket
	wire         rsp_xbar_demux_007_src0_valid;                                                               // rsp_xbar_demux_007:src0_valid -> rsp_xbar_mux_001:sink7_valid
	wire         rsp_xbar_demux_007_src0_startofpacket;                                                       // rsp_xbar_demux_007:src0_startofpacket -> rsp_xbar_mux_001:sink7_startofpacket
	wire  [94:0] rsp_xbar_demux_007_src0_data;                                                                // rsp_xbar_demux_007:src0_data -> rsp_xbar_mux_001:sink7_data
	wire  [11:0] rsp_xbar_demux_007_src0_channel;                                                             // rsp_xbar_demux_007:src0_channel -> rsp_xbar_mux_001:sink7_channel
	wire         rsp_xbar_demux_007_src0_ready;                                                               // rsp_xbar_mux_001:sink7_ready -> rsp_xbar_demux_007:src0_ready
	wire         rsp_xbar_demux_008_src0_endofpacket;                                                         // rsp_xbar_demux_008:src0_endofpacket -> rsp_xbar_mux_001:sink8_endofpacket
	wire         rsp_xbar_demux_008_src0_valid;                                                               // rsp_xbar_demux_008:src0_valid -> rsp_xbar_mux_001:sink8_valid
	wire         rsp_xbar_demux_008_src0_startofpacket;                                                       // rsp_xbar_demux_008:src0_startofpacket -> rsp_xbar_mux_001:sink8_startofpacket
	wire  [94:0] rsp_xbar_demux_008_src0_data;                                                                // rsp_xbar_demux_008:src0_data -> rsp_xbar_mux_001:sink8_data
	wire  [11:0] rsp_xbar_demux_008_src0_channel;                                                             // rsp_xbar_demux_008:src0_channel -> rsp_xbar_mux_001:sink8_channel
	wire         rsp_xbar_demux_008_src0_ready;                                                               // rsp_xbar_mux_001:sink8_ready -> rsp_xbar_demux_008:src0_ready
	wire         rsp_xbar_demux_009_src0_endofpacket;                                                         // rsp_xbar_demux_009:src0_endofpacket -> rsp_xbar_mux_001:sink9_endofpacket
	wire         rsp_xbar_demux_009_src0_valid;                                                               // rsp_xbar_demux_009:src0_valid -> rsp_xbar_mux_001:sink9_valid
	wire         rsp_xbar_demux_009_src0_startofpacket;                                                       // rsp_xbar_demux_009:src0_startofpacket -> rsp_xbar_mux_001:sink9_startofpacket
	wire  [94:0] rsp_xbar_demux_009_src0_data;                                                                // rsp_xbar_demux_009:src0_data -> rsp_xbar_mux_001:sink9_data
	wire  [11:0] rsp_xbar_demux_009_src0_channel;                                                             // rsp_xbar_demux_009:src0_channel -> rsp_xbar_mux_001:sink9_channel
	wire         rsp_xbar_demux_009_src0_ready;                                                               // rsp_xbar_mux_001:sink9_ready -> rsp_xbar_demux_009:src0_ready
	wire         rsp_xbar_demux_010_src0_endofpacket;                                                         // rsp_xbar_demux_010:src0_endofpacket -> rsp_xbar_mux_001:sink10_endofpacket
	wire         rsp_xbar_demux_010_src0_valid;                                                               // rsp_xbar_demux_010:src0_valid -> rsp_xbar_mux_001:sink10_valid
	wire         rsp_xbar_demux_010_src0_startofpacket;                                                       // rsp_xbar_demux_010:src0_startofpacket -> rsp_xbar_mux_001:sink10_startofpacket
	wire  [94:0] rsp_xbar_demux_010_src0_data;                                                                // rsp_xbar_demux_010:src0_data -> rsp_xbar_mux_001:sink10_data
	wire  [11:0] rsp_xbar_demux_010_src0_channel;                                                             // rsp_xbar_demux_010:src0_channel -> rsp_xbar_mux_001:sink10_channel
	wire         rsp_xbar_demux_010_src0_ready;                                                               // rsp_xbar_mux_001:sink10_ready -> rsp_xbar_demux_010:src0_ready
	wire         rsp_xbar_demux_011_src0_endofpacket;                                                         // rsp_xbar_demux_011:src0_endofpacket -> rsp_xbar_mux_001:sink11_endofpacket
	wire         rsp_xbar_demux_011_src0_valid;                                                               // rsp_xbar_demux_011:src0_valid -> rsp_xbar_mux_001:sink11_valid
	wire         rsp_xbar_demux_011_src0_startofpacket;                                                       // rsp_xbar_demux_011:src0_startofpacket -> rsp_xbar_mux_001:sink11_startofpacket
	wire  [94:0] rsp_xbar_demux_011_src0_data;                                                                // rsp_xbar_demux_011:src0_data -> rsp_xbar_mux_001:sink11_data
	wire  [11:0] rsp_xbar_demux_011_src0_channel;                                                             // rsp_xbar_demux_011:src0_channel -> rsp_xbar_mux_001:sink11_channel
	wire         rsp_xbar_demux_011_src0_ready;                                                               // rsp_xbar_mux_001:sink11_ready -> rsp_xbar_demux_011:src0_ready

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (17),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (17),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios_instruction_master_translator (
		.clk                      (Clk_clk_clk),                                                                //                       clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                                   //                     reset.reset
		.uav_address              (nios_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (nios_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (nios_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (nios_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (nios_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (nios_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (nios_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (nios_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (nios_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (nios_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (nios_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (Nios_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (Nios_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (Nios_instruction_master_read),                                               //                          .read
		.av_readdata              (Nios_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount            (1'b1),                                                                       //               (terminated)
		.av_byteenable            (4'b1111),                                                                    //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                       //               (terminated)
		.av_begintransfer         (1'b0),                                                                       //               (terminated)
		.av_chipselect            (1'b0),                                                                       //               (terminated)
		.av_readdatavalid         (),                                                                           //               (terminated)
		.av_write                 (1'b0),                                                                       //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                                       //               (terminated)
		.av_lock                  (1'b0),                                                                       //               (terminated)
		.av_debugaccess           (1'b0),                                                                       //               (terminated)
		.uav_clken                (),                                                                           //               (terminated)
		.av_clken                 (1'b1),                                                                       //               (terminated)
		.uav_response             (2'b00),                                                                      //               (terminated)
		.av_response              (),                                                                           //               (terminated)
		.uav_writeresponserequest (),                                                                           //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                       //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                       //               (terminated)
		.av_writeresponsevalid    ()                                                                            //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (17),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (17),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios_data_master_translator (
		.clk                      (Clk_clk_clk),                                                         //                       clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                            //                     reset.reset
		.uav_address              (nios_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (nios_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (nios_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (nios_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (nios_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (nios_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (nios_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (nios_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (nios_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (nios_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (nios_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (Nios_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (Nios_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (Nios_data_master_byteenable),                                         //                          .byteenable
		.av_read                  (Nios_data_master_read),                                               //                          .read
		.av_readdata              (Nios_data_master_readdata),                                           //                          .readdata
		.av_write                 (Nios_data_master_write),                                              //                          .write
		.av_writedata             (Nios_data_master_writedata),                                          //                          .writedata
		.av_debugaccess           (Nios_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount            (1'b1),                                                                //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                //               (terminated)
		.av_begintransfer         (1'b0),                                                                //               (terminated)
		.av_chipselect            (1'b0),                                                                //               (terminated)
		.av_readdatavalid         (),                                                                    //               (terminated)
		.av_lock                  (1'b0),                                                                //               (terminated)
		.uav_clken                (),                                                                    //               (terminated)
		.av_clken                 (1'b1),                                                                //               (terminated)
		.uav_response             (2'b00),                                                               //               (terminated)
		.av_response              (),                                                                    //               (terminated)
		.uav_writeresponserequest (),                                                                    //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                //               (terminated)
		.av_writeresponsevalid    ()                                                                     //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios_jtag_debug_module_translator (
		.clk                      (Clk_clk_clk),                                                                       //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (Nios_jtag_debug_module_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (Nios_jtag_debug_module_write),                                                      //                         .write
		.av_read                  (Nios_jtag_debug_module_read),                                                       //                         .read
		.av_readdata              (Nios_jtag_debug_module_readdata),                                                   //                         .readdata
		.av_writedata             (Nios_jtag_debug_module_writedata),                                                  //                         .writedata
		.av_byteenable            (Nios_jtag_debug_module_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (Nios_jtag_debug_module_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (Nios_jtag_debug_module_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                  //              (terminated)
		.av_lock                  (),                                                                                  //              (terminated)
		.av_chipselect            (),                                                                                  //              (terminated)
		.av_clken                 (),                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                              //              (terminated)
		.av_outputenable          (),                                                                                  //              (terminated)
		.uav_response             (),                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (13),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) memory_s1_translator (
		.clk                      (Clk_clk_clk),                                                          //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (memory_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (memory_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (memory_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (memory_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (memory_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (memory_s1_write),                                                      //                         .write
		.av_readdata              (memory_s1_readdata),                                                   //                         .readdata
		.av_writedata             (memory_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (memory_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (memory_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (memory_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                     //              (terminated)
		.av_begintransfer         (),                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                     //              (terminated)
		.av_burstcount            (),                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                 //              (terminated)
		.av_waitrequest           (1'b0),                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                     //              (terminated)
		.av_lock                  (),                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                 //              (terminated)
		.av_debugaccess           (),                                                                     //              (terminated)
		.av_outputenable          (),                                                                     //              (terminated)
		.uav_response             (),                                                                     //              (terminated)
		.av_response              (2'b00),                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_avalon_jtag_slave_translator (
		.clk                      (Clk_clk_clk),                                                                       //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (Jtag_avalon_jtag_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (Jtag_avalon_jtag_slave_write),                                                      //                         .write
		.av_read                  (Jtag_avalon_jtag_slave_read),                                                       //                         .read
		.av_readdata              (Jtag_avalon_jtag_slave_readdata),                                                   //                         .readdata
		.av_writedata             (Jtag_avalon_jtag_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (Jtag_avalon_jtag_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (Jtag_avalon_jtag_slave_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                  //              (terminated)
		.av_byteenable            (),                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                  //              (terminated)
		.av_lock                  (),                                                                                  //              (terminated)
		.av_clken                 (),                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                              //              (terminated)
		.av_debugaccess           (),                                                                                  //              (terminated)
		.av_outputenable          (),                                                                                  //              (terminated)
		.uav_response             (),                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) led1_s1_translator (
		.clk                      (Clk_clk_clk),                                                        //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (led1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (led1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (led1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (led1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (led1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (led1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (led1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (led1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (led1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (led1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (led1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (led1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (led1_s1_write),                                                      //                         .write
		.av_readdata              (led1_s1_readdata),                                                   //                         .readdata
		.av_writedata             (led1_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (led1_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pushbuton1_s1_translator (
		.clk                      (Clk_clk_clk),                                                              //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pushbuton1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (pushbuton1_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                         //              (terminated)
		.av_read                  (),                                                                         //              (terminated)
		.av_writedata             (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_chipselect            (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) led2_s1_translator (
		.clk                      (Clk_clk_clk),                                                        //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (led2_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (led2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (led2_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (led2_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (led2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (led2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (led2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (led2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (led2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (led2_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (led2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (led2_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (led2_s1_write),                                                      //                         .write
		.av_readdata              (led2_s1_readdata),                                                   //                         .readdata
		.av_writedata             (led2_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (led2_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) led3_s1_translator (
		.clk                      (Clk_clk_clk),                                                        //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (led3_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (led3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (led3_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (led3_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (led3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (led3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (led3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (led3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (led3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (led3_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (led3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (led3_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (led3_s1_write),                                                      //                         .write
		.av_readdata              (led3_s1_readdata),                                                   //                         .readdata
		.av_writedata             (led3_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (led3_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) led4_s1_translator (
		.clk                      (Clk_clk_clk),                                                        //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (led4_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (led4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (led4_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (led4_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (led4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (led4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (led4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (led4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (led4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (led4_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (led4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (led4_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (led4_s1_write),                                                      //                         .write
		.av_readdata              (led4_s1_readdata),                                                   //                         .readdata
		.av_writedata             (led4_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (led4_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) led5_s1_translator (
		.clk                      (Clk_clk_clk),                                                        //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (led5_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (led5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (led5_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (led5_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (led5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (led5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (led5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (led5_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (led5_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (led5_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (led5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (led5_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (led5_s1_write),                                                      //                         .write
		.av_readdata              (led5_s1_readdata),                                                   //                         .readdata
		.av_writedata             (led5_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (led5_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pushbuton2_s1_translator (
		.clk                      (Clk_clk_clk),                                                              //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pushbuton2_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (pushbuton2_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                         //              (terminated)
		.av_read                  (),                                                                         //              (terminated)
		.av_writedata             (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_chipselect            (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pushbuton3_s1_translator (
		.clk                      (Clk_clk_clk),                                                              //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pushbuton3_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (pushbuton3_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                         //              (terminated)
		.av_read                  (),                                                                         //              (terminated)
		.av_writedata             (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_chipselect            (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pushbuton4_s1_translator (
		.clk                      (Clk_clk_clk),                                                              //                      clk.clk
		.reset                    (Nios_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pushbuton4_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (pushbuton4_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                         //              (terminated)
		.av_read                  (),                                                                         //              (terminated)
		.av_writedata             (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_chipselect            (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_BEGIN_BURST           (72),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_BURST_TYPE_H          (69),
		.PKT_BURST_TYPE_L          (68),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_TRANS_EXCLUSIVE       (58),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_THREAD_ID_H           (82),
		.PKT_THREAD_ID_L           (82),
		.PKT_CACHE_H               (89),
		.PKT_CACHE_L               (86),
		.PKT_DATA_SIDEBAND_H       (71),
		.PKT_DATA_SIDEBAND_L       (71),
		.PKT_QOS_H                 (73),
		.PKT_QOS_L                 (73),
		.PKT_ADDR_SIDEBAND_H       (70),
		.PKT_ADDR_SIDEBAND_L       (70),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_DATA_W                 (95),
		.ST_CHANNEL_W              (12),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios_instruction_master_translator_avalon_universal_master_0_agent (
		.clk                     (Clk_clk_clk),                                                                         //       clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.av_address              (nios_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (nios_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (nios_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (nios_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (nios_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (nios_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (nios_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (nios_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (nios_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (nios_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (nios_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_src_valid),                                                              //        rp.valid
		.rp_data                 (rsp_xbar_mux_src_data),                                                               //          .data
		.rp_channel              (rsp_xbar_mux_src_channel),                                                            //          .channel
		.rp_startofpacket        (rsp_xbar_mux_src_startofpacket),                                                      //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_src_endofpacket),                                                        //          .endofpacket
		.rp_ready                (rsp_xbar_mux_src_ready),                                                              //          .ready
		.av_response             (),                                                                                    // (terminated)
		.av_writeresponserequest (1'b0),                                                                                // (terminated)
		.av_writeresponsevalid   ()                                                                                     // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_BEGIN_BURST           (72),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_BURST_TYPE_H          (69),
		.PKT_BURST_TYPE_L          (68),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_TRANS_EXCLUSIVE       (58),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_THREAD_ID_H           (82),
		.PKT_THREAD_ID_L           (82),
		.PKT_CACHE_H               (89),
		.PKT_CACHE_L               (86),
		.PKT_DATA_SIDEBAND_H       (71),
		.PKT_DATA_SIDEBAND_L       (71),
		.PKT_QOS_H                 (73),
		.PKT_QOS_L                 (73),
		.PKT_ADDR_SIDEBAND_H       (70),
		.PKT_ADDR_SIDEBAND_L       (70),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_DATA_W                 (95),
		.ST_CHANNEL_W              (12),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios_data_master_translator_avalon_universal_master_0_agent (
		.clk                     (Clk_clk_clk),                                                                  //       clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address              (nios_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (nios_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (nios_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (nios_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (nios_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (nios_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (nios_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (nios_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (nios_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (nios_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (nios_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (nios_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (nios_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (nios_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (nios_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (nios_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_001_src_valid),                                                   //        rp.valid
		.rp_data                 (rsp_xbar_mux_001_src_data),                                                    //          .data
		.rp_channel              (rsp_xbar_mux_001_src_channel),                                                 //          .channel
		.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                           //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                             //          .endofpacket
		.rp_ready                (rsp_xbar_mux_001_src_ready),                                                   //          .ready
		.av_response             (),                                                                             // (terminated)
		.av_writeresponserequest (1'b0),                                                                         // (terminated)
		.av_writeresponsevalid   ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                                 //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                    //                .channel
		.rf_sink_ready           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                                 //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                        // (terminated)
		.csr_readdata      (),                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                        // (terminated)
		.almost_full_data  (),                                                                                            // (terminated)
		.almost_empty_data (),                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                        // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                        // (terminated)
		.out_channel       ()                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) memory_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                    //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (memory_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (memory_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (memory_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (memory_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (memory_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (memory_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (memory_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                   //                .channel
		.rf_sink_ready           (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                    //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                                 //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                                //                .channel
		.rf_sink_ready           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                                 //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                        // (terminated)
		.csr_readdata      (),                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                        // (terminated)
		.almost_full_data  (),                                                                                            // (terminated)
		.almost_empty_data (),                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                        // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                        // (terminated)
		.out_channel       ()                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) led1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                  //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (led1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (led1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (led1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (led1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (led1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (led1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (led1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (led1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (led1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (led1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (led1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (led1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (led1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (led1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (led1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (led1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                 //                .channel
		.rf_sink_ready           (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (led1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                  //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (led1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (led1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pushbuton1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                        //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pushbuton1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                       //                .channel
		.rf_sink_ready           (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                        //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) led2_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                  //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (led2_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (led2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (led2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (led2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (led2_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (led2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (led2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (led2_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (led2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (led2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (led2_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (led2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (led2_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (led2_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (led2_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (led2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_005_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_005_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_005_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_005_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_005_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_005_src_channel),                                                 //                .channel
		.rf_sink_ready           (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (led2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                  //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (led2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (led2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) led3_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                  //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (led3_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (led3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (led3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (led3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (led3_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (led3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (led3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (led3_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (led3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (led3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (led3_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (led3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (led3_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (led3_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (led3_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (led3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_006_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_006_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_006_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_006_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_006_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_006_src_channel),                                                 //                .channel
		.rf_sink_ready           (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (led3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                  //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (led3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (led3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) led4_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                  //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (led4_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (led4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (led4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (led4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (led4_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (led4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (led4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (led4_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (led4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (led4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (led4_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (led4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (led4_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (led4_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (led4_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (led4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_007_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_007_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_007_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_007_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_007_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_007_src_channel),                                                 //                .channel
		.rf_sink_ready           (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (led4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                  //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (led4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (led4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) led5_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                  //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (led5_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (led5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (led5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (led5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (led5_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (led5_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (led5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (led5_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (led5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (led5_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (led5_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (led5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (led5_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (led5_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (led5_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (led5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_008_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_008_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_008_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_008_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_008_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_008_src_channel),                                                 //                .channel
		.rf_sink_ready           (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (led5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                  //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (led5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (led5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pushbuton2_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                        //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pushbuton2_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_009_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_009_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_009_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_009_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_009_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_009_src_channel),                                                       //                .channel
		.rf_sink_ready           (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                        //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pushbuton3_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                        //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pushbuton3_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_010_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_010_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_010_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_010_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_010_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_010_src_channel),                                                       //                .channel
		.rf_sink_ready           (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                        //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (81),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (85),
		.PKT_PROTECTION_L          (83),
		.PKT_RESPONSE_STATUS_H     (91),
		.PKT_RESPONSE_STATUS_L     (90),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (92),
		.PKT_ORI_BURST_SIZE_H      (94),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (95),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pushbuton4_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (Clk_clk_clk),                                                                        //             clk.clk
		.reset                   (Nios_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pushbuton4_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_011_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_011_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_011_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_011_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_011_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_011_src_channel),                                                       //                .channel
		.rf_sink_ready           (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (96),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (Clk_clk_clk),                                                                        //       clk.clk
		.reset             (Nios_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	Nios_mm_interconnect_0_addr_router addr_router (
		.sink_ready         (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                                         //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                               //       src.ready
		.src_valid          (addr_router_src_valid),                                                               //          .valid
		.src_data           (addr_router_src_data),                                                                //          .data
		.src_channel        (addr_router_src_channel),                                                             //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                       //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                          //          .endofpacket
	);

	Nios_mm_interconnect_0_addr_router_001 addr_router_001 (
		.sink_ready         (nios_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                                  //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (addr_router_001_src_ready),                                                    //       src.ready
		.src_valid          (addr_router_001_src_valid),                                                    //          .valid
		.src_data           (addr_router_001_src_data),                                                     //          .data
		.src_channel        (addr_router_001_src_channel),                                                  //          .channel
		.src_startofpacket  (addr_router_001_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (addr_router_001_src_endofpacket)                                               //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router id_router (
		.sink_ready         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                                       //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                               //       src.ready
		.src_valid          (id_router_src_valid),                                                               //          .valid
		.src_data           (id_router_src_data),                                                                //          .data
		.src_channel        (id_router_src_channel),                                                             //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                       //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                          //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router id_router_001 (
		.sink_ready         (memory_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (memory_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (memory_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                          //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                              //       src.ready
		.src_valid          (id_router_001_src_valid),                                              //          .valid
		.src_data           (id_router_001_src_data),                                               //          .data
		.src_channel        (id_router_001_src_channel),                                            //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                         //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_002 (
		.sink_ready         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                                       //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                           //       src.ready
		.src_valid          (id_router_002_src_valid),                                                           //          .valid
		.src_data           (id_router_002_src_data),                                                            //          .data
		.src_channel        (id_router_002_src_channel),                                                         //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                                   //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                                      //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_003 (
		.sink_ready         (led1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (led1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (led1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (led1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (led1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                        //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                            //       src.ready
		.src_valid          (id_router_003_src_valid),                                            //          .valid
		.src_data           (id_router_003_src_data),                                             //          .data
		.src_channel        (id_router_003_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                       //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_004 (
		.sink_ready         (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pushbuton1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                                  //       src.ready
		.src_valid          (id_router_004_src_valid),                                                  //          .valid
		.src_data           (id_router_004_src_data),                                                   //          .data
		.src_channel        (id_router_004_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                             //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_005 (
		.sink_ready         (led2_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (led2_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (led2_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (led2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (led2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                        //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                            //       src.ready
		.src_valid          (id_router_005_src_valid),                                            //          .valid
		.src_data           (id_router_005_src_data),                                             //          .data
		.src_channel        (id_router_005_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                       //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_006 (
		.sink_ready         (led3_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (led3_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (led3_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (led3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (led3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                        //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                            //       src.ready
		.src_valid          (id_router_006_src_valid),                                            //          .valid
		.src_data           (id_router_006_src_data),                                             //          .data
		.src_channel        (id_router_006_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                       //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_007 (
		.sink_ready         (led4_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (led4_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (led4_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (led4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (led4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                        //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_007_src_ready),                                            //       src.ready
		.src_valid          (id_router_007_src_valid),                                            //          .valid
		.src_data           (id_router_007_src_data),                                             //          .data
		.src_channel        (id_router_007_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_007_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_007_src_endofpacket)                                       //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_008 (
		.sink_ready         (led5_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (led5_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (led5_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (led5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (led5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                        //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_008_src_ready),                                            //       src.ready
		.src_valid          (id_router_008_src_valid),                                            //          .valid
		.src_data           (id_router_008_src_data),                                             //          .data
		.src_channel        (id_router_008_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_008_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_008_src_endofpacket)                                       //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_009 (
		.sink_ready         (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pushbuton2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_009_src_ready),                                                  //       src.ready
		.src_valid          (id_router_009_src_valid),                                                  //          .valid
		.src_data           (id_router_009_src_data),                                                   //          .data
		.src_channel        (id_router_009_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_009_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_009_src_endofpacket)                                             //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_010 (
		.sink_ready         (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pushbuton3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_010_src_ready),                                                  //       src.ready
		.src_valid          (id_router_010_src_valid),                                                  //          .valid
		.src_data           (id_router_010_src_data),                                                   //          .data
		.src_channel        (id_router_010_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_010_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_010_src_endofpacket)                                             //          .endofpacket
	);

	Nios_mm_interconnect_0_id_router_002 id_router_011 (
		.sink_ready         (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pushbuton4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (Clk_clk_clk),                                                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_011_src_ready),                                                  //       src.ready
		.src_valid          (id_router_011_src_valid),                                                  //          .valid
		.src_data           (id_router_011_src_data),                                                   //          .data
		.src_channel        (id_router_011_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_011_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_011_src_endofpacket)                                             //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_src_ready),                    //      sink.ready
		.sink_channel       (addr_router_src_channel),                  //          .channel
		.sink_data          (addr_router_src_data),                     //          .data
		.sink_startofpacket (addr_router_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (addr_router_src_endofpacket),              //          .endofpacket
		.sink_valid         (addr_router_src_valid),                    //          .valid
		.src0_ready         (cmd_xbar_demux_src0_ready),                //      src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                //          .valid
		.src0_data          (cmd_xbar_demux_src0_data),                 //          .data
		.src0_channel       (cmd_xbar_demux_src0_channel),              //          .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),          //          .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                //      src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                //          .valid
		.src1_data          (cmd_xbar_demux_src1_data),                 //          .data
		.src1_channel       (cmd_xbar_demux_src1_channel),              //          .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),        //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)           //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_demux_001 cmd_xbar_demux_001 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready          (addr_router_001_src_ready),                //      sink.ready
		.sink_channel        (addr_router_001_src_channel),              //          .channel
		.sink_data           (addr_router_001_src_data),                 //          .data
		.sink_startofpacket  (addr_router_001_src_startofpacket),        //          .startofpacket
		.sink_endofpacket    (addr_router_001_src_endofpacket),          //          .endofpacket
		.sink_valid          (addr_router_001_src_valid),                //          .valid
		.src0_ready          (cmd_xbar_demux_001_src0_ready),            //      src0.ready
		.src0_valid          (cmd_xbar_demux_001_src0_valid),            //          .valid
		.src0_data           (cmd_xbar_demux_001_src0_data),             //          .data
		.src0_channel        (cmd_xbar_demux_001_src0_channel),          //          .channel
		.src0_startofpacket  (cmd_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket    (cmd_xbar_demux_001_src0_endofpacket),      //          .endofpacket
		.src1_ready          (cmd_xbar_demux_001_src1_ready),            //      src1.ready
		.src1_valid          (cmd_xbar_demux_001_src1_valid),            //          .valid
		.src1_data           (cmd_xbar_demux_001_src1_data),             //          .data
		.src1_channel        (cmd_xbar_demux_001_src1_channel),          //          .channel
		.src1_startofpacket  (cmd_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.src1_endofpacket    (cmd_xbar_demux_001_src1_endofpacket),      //          .endofpacket
		.src2_ready          (cmd_xbar_demux_001_src2_ready),            //      src2.ready
		.src2_valid          (cmd_xbar_demux_001_src2_valid),            //          .valid
		.src2_data           (cmd_xbar_demux_001_src2_data),             //          .data
		.src2_channel        (cmd_xbar_demux_001_src2_channel),          //          .channel
		.src2_startofpacket  (cmd_xbar_demux_001_src2_startofpacket),    //          .startofpacket
		.src2_endofpacket    (cmd_xbar_demux_001_src2_endofpacket),      //          .endofpacket
		.src3_ready          (cmd_xbar_demux_001_src3_ready),            //      src3.ready
		.src3_valid          (cmd_xbar_demux_001_src3_valid),            //          .valid
		.src3_data           (cmd_xbar_demux_001_src3_data),             //          .data
		.src3_channel        (cmd_xbar_demux_001_src3_channel),          //          .channel
		.src3_startofpacket  (cmd_xbar_demux_001_src3_startofpacket),    //          .startofpacket
		.src3_endofpacket    (cmd_xbar_demux_001_src3_endofpacket),      //          .endofpacket
		.src4_ready          (cmd_xbar_demux_001_src4_ready),            //      src4.ready
		.src4_valid          (cmd_xbar_demux_001_src4_valid),            //          .valid
		.src4_data           (cmd_xbar_demux_001_src4_data),             //          .data
		.src4_channel        (cmd_xbar_demux_001_src4_channel),          //          .channel
		.src4_startofpacket  (cmd_xbar_demux_001_src4_startofpacket),    //          .startofpacket
		.src4_endofpacket    (cmd_xbar_demux_001_src4_endofpacket),      //          .endofpacket
		.src5_ready          (cmd_xbar_demux_001_src5_ready),            //      src5.ready
		.src5_valid          (cmd_xbar_demux_001_src5_valid),            //          .valid
		.src5_data           (cmd_xbar_demux_001_src5_data),             //          .data
		.src5_channel        (cmd_xbar_demux_001_src5_channel),          //          .channel
		.src5_startofpacket  (cmd_xbar_demux_001_src5_startofpacket),    //          .startofpacket
		.src5_endofpacket    (cmd_xbar_demux_001_src5_endofpacket),      //          .endofpacket
		.src6_ready          (cmd_xbar_demux_001_src6_ready),            //      src6.ready
		.src6_valid          (cmd_xbar_demux_001_src6_valid),            //          .valid
		.src6_data           (cmd_xbar_demux_001_src6_data),             //          .data
		.src6_channel        (cmd_xbar_demux_001_src6_channel),          //          .channel
		.src6_startofpacket  (cmd_xbar_demux_001_src6_startofpacket),    //          .startofpacket
		.src6_endofpacket    (cmd_xbar_demux_001_src6_endofpacket),      //          .endofpacket
		.src7_ready          (cmd_xbar_demux_001_src7_ready),            //      src7.ready
		.src7_valid          (cmd_xbar_demux_001_src7_valid),            //          .valid
		.src7_data           (cmd_xbar_demux_001_src7_data),             //          .data
		.src7_channel        (cmd_xbar_demux_001_src7_channel),          //          .channel
		.src7_startofpacket  (cmd_xbar_demux_001_src7_startofpacket),    //          .startofpacket
		.src7_endofpacket    (cmd_xbar_demux_001_src7_endofpacket),      //          .endofpacket
		.src8_ready          (cmd_xbar_demux_001_src8_ready),            //      src8.ready
		.src8_valid          (cmd_xbar_demux_001_src8_valid),            //          .valid
		.src8_data           (cmd_xbar_demux_001_src8_data),             //          .data
		.src8_channel        (cmd_xbar_demux_001_src8_channel),          //          .channel
		.src8_startofpacket  (cmd_xbar_demux_001_src8_startofpacket),    //          .startofpacket
		.src8_endofpacket    (cmd_xbar_demux_001_src8_endofpacket),      //          .endofpacket
		.src9_ready          (cmd_xbar_demux_001_src9_ready),            //      src9.ready
		.src9_valid          (cmd_xbar_demux_001_src9_valid),            //          .valid
		.src9_data           (cmd_xbar_demux_001_src9_data),             //          .data
		.src9_channel        (cmd_xbar_demux_001_src9_channel),          //          .channel
		.src9_startofpacket  (cmd_xbar_demux_001_src9_startofpacket),    //          .startofpacket
		.src9_endofpacket    (cmd_xbar_demux_001_src9_endofpacket),      //          .endofpacket
		.src10_ready         (cmd_xbar_demux_001_src10_ready),           //     src10.ready
		.src10_valid         (cmd_xbar_demux_001_src10_valid),           //          .valid
		.src10_data          (cmd_xbar_demux_001_src10_data),            //          .data
		.src10_channel       (cmd_xbar_demux_001_src10_channel),         //          .channel
		.src10_startofpacket (cmd_xbar_demux_001_src10_startofpacket),   //          .startofpacket
		.src10_endofpacket   (cmd_xbar_demux_001_src10_endofpacket),     //          .endofpacket
		.src11_ready         (cmd_xbar_demux_001_src11_ready),           //     src11.ready
		.src11_valid         (cmd_xbar_demux_001_src11_valid),           //          .valid
		.src11_data          (cmd_xbar_demux_001_src11_data),            //          .data
		.src11_channel       (cmd_xbar_demux_001_src11_channel),         //          .channel
		.src11_startofpacket (cmd_xbar_demux_001_src11_startofpacket),   //          .startofpacket
		.src11_endofpacket   (cmd_xbar_demux_001_src11_endofpacket)      //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                   //          .valid
		.src_data            (cmd_xbar_mux_src_data),                    //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),          //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src0_ready),            //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src0_valid),            //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src0_channel),          //          .channel
		.sink1_data          (cmd_xbar_demux_001_src0_data),             //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket),          //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src1_ready),            //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src1_valid),            //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src1_channel),          //          .channel
		.sink1_data          (cmd_xbar_demux_001_src1_data),             //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_002 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src2_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src2_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src2_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src2_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src2_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src2_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_003 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src3_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src3_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src3_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src3_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src3_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src3_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_004 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src4_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src4_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src4_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src4_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src4_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src4_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_005 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src5_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src5_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src5_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src5_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src5_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src5_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_006 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_006_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_006_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_006_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_006_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_006_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_006_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src6_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src6_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src6_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src6_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src6_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src6_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_007 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_007_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_007_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_007_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_007_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_007_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_007_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src7_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src7_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src7_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src7_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src7_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src7_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_008 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_008_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_008_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_008_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_008_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_008_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_008_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src8_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src8_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src8_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src8_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src8_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src8_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_009 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_009_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_009_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_009_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_009_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_009_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_009_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src9_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src9_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src9_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src9_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src9_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src9_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_010 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_010_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_010_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_010_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_010_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_010_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_010_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src10_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src10_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src10_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src10_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src10_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src10_endofpacket)      //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_011 (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_011_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_011_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_011_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_011_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_011_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_011_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src11_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src11_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src11_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src11_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src11_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src11_endofpacket)      //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                      //      sink.ready
		.sink_channel       (id_router_src_channel),                    //          .channel
		.sink_data          (id_router_src_data),                       //          .data
		.sink_startofpacket (id_router_src_startofpacket),              //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                //          .endofpacket
		.sink_valid         (id_router_src_valid),                      //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                 //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),              //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),          //          .endofpacket
		.src1_ready         (rsp_xbar_demux_src1_ready),                //      src1.ready
		.src1_valid         (rsp_xbar_demux_src1_valid),                //          .valid
		.src1_data          (rsp_xbar_demux_src1_data),                 //          .data
		.src1_channel       (rsp_xbar_demux_src1_channel),              //          .channel
		.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),        //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)           //          .endofpacket
	);

	Nios_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux_001 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                  //      sink.ready
		.sink_channel       (id_router_001_src_channel),                //          .channel
		.sink_data          (id_router_001_src_data),                   //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),      //          .endofpacket
		.src1_ready         (rsp_xbar_demux_001_src1_ready),            //      src1.ready
		.src1_valid         (rsp_xbar_demux_001_src1_valid),            //          .valid
		.src1_data          (rsp_xbar_demux_001_src1_data),             //          .data
		.src1_channel       (rsp_xbar_demux_001_src1_channel),          //          .channel
		.src1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_002 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                  //      sink.ready
		.sink_channel       (id_router_002_src_channel),                //          .channel
		.sink_data          (id_router_002_src_data),                   //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_003 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                  //      sink.ready
		.sink_channel       (id_router_003_src_channel),                //          .channel
		.sink_data          (id_router_003_src_data),                   //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_004 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                  //      sink.ready
		.sink_channel       (id_router_004_src_channel),                //          .channel
		.sink_data          (id_router_004_src_data),                   //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_005 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                  //      sink.ready
		.sink_channel       (id_router_005_src_channel),                //          .channel
		.sink_data          (id_router_005_src_data),                   //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_006 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),                  //      sink.ready
		.sink_channel       (id_router_006_src_channel),                //          .channel
		.sink_data          (id_router_006_src_data),                   //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_006_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_007 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_007_src_ready),                  //      sink.ready
		.sink_channel       (id_router_007_src_channel),                //          .channel
		.sink_data          (id_router_007_src_data),                   //          .data
		.sink_startofpacket (id_router_007_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_007_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_007_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_007_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_007_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_007_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_007_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_007_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_007_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_008 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_008_src_ready),                  //      sink.ready
		.sink_channel       (id_router_008_src_channel),                //          .channel
		.sink_data          (id_router_008_src_data),                   //          .data
		.sink_startofpacket (id_router_008_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_008_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_008_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_008_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_008_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_008_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_008_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_008_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_008_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_009 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_009_src_ready),                  //      sink.ready
		.sink_channel       (id_router_009_src_channel),                //          .channel
		.sink_data          (id_router_009_src_data),                   //          .data
		.sink_startofpacket (id_router_009_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_009_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_009_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_009_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_009_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_009_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_009_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_009_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_009_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_010 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_010_src_ready),                  //      sink.ready
		.sink_channel       (id_router_010_src_channel),                //          .channel
		.sink_data          (id_router_010_src_data),                   //          .data
		.sink_startofpacket (id_router_010_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_010_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_010_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_010_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_010_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_010_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_010_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_010_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_010_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_011 (
		.clk                (Clk_clk_clk),                              //       clk.clk
		.reset              (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_011_src_ready),                  //      sink.ready
		.sink_channel       (id_router_011_src_channel),                //          .channel
		.sink_data          (id_router_011_src_data),                   //          .data
		.sink_startofpacket (id_router_011_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_011_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_011_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_011_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_011_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_011_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_011_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_011_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (Clk_clk_clk),                              //       clk.clk
		.reset               (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                   //          .valid
		.src_data            (rsp_xbar_mux_src_data),                    //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),              //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                 //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),          //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),            //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),            //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),          //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),             //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)       //          .endofpacket
	);

	Nios_mm_interconnect_0_rsp_xbar_mux_001 rsp_xbar_mux_001 (
		.clk                  (Clk_clk_clk),                              //       clk.clk
		.reset                (Nios_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready            (rsp_xbar_mux_001_src_ready),               //       src.ready
		.src_valid            (rsp_xbar_mux_001_src_valid),               //          .valid
		.src_data             (rsp_xbar_mux_001_src_data),                //          .data
		.src_channel          (rsp_xbar_mux_001_src_channel),             //          .channel
		.src_startofpacket    (rsp_xbar_mux_001_src_startofpacket),       //          .startofpacket
		.src_endofpacket      (rsp_xbar_mux_001_src_endofpacket),         //          .endofpacket
		.sink0_ready          (rsp_xbar_demux_src1_ready),                //     sink0.ready
		.sink0_valid          (rsp_xbar_demux_src1_valid),                //          .valid
		.sink0_channel        (rsp_xbar_demux_src1_channel),              //          .channel
		.sink0_data           (rsp_xbar_demux_src1_data),                 //          .data
		.sink0_startofpacket  (rsp_xbar_demux_src1_startofpacket),        //          .startofpacket
		.sink0_endofpacket    (rsp_xbar_demux_src1_endofpacket),          //          .endofpacket
		.sink1_ready          (rsp_xbar_demux_001_src1_ready),            //     sink1.ready
		.sink1_valid          (rsp_xbar_demux_001_src1_valid),            //          .valid
		.sink1_channel        (rsp_xbar_demux_001_src1_channel),          //          .channel
		.sink1_data           (rsp_xbar_demux_001_src1_data),             //          .data
		.sink1_startofpacket  (rsp_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.sink1_endofpacket    (rsp_xbar_demux_001_src1_endofpacket),      //          .endofpacket
		.sink2_ready          (rsp_xbar_demux_002_src0_ready),            //     sink2.ready
		.sink2_valid          (rsp_xbar_demux_002_src0_valid),            //          .valid
		.sink2_channel        (rsp_xbar_demux_002_src0_channel),          //          .channel
		.sink2_data           (rsp_xbar_demux_002_src0_data),             //          .data
		.sink2_startofpacket  (rsp_xbar_demux_002_src0_startofpacket),    //          .startofpacket
		.sink2_endofpacket    (rsp_xbar_demux_002_src0_endofpacket),      //          .endofpacket
		.sink3_ready          (rsp_xbar_demux_003_src0_ready),            //     sink3.ready
		.sink3_valid          (rsp_xbar_demux_003_src0_valid),            //          .valid
		.sink3_channel        (rsp_xbar_demux_003_src0_channel),          //          .channel
		.sink3_data           (rsp_xbar_demux_003_src0_data),             //          .data
		.sink3_startofpacket  (rsp_xbar_demux_003_src0_startofpacket),    //          .startofpacket
		.sink3_endofpacket    (rsp_xbar_demux_003_src0_endofpacket),      //          .endofpacket
		.sink4_ready          (rsp_xbar_demux_004_src0_ready),            //     sink4.ready
		.sink4_valid          (rsp_xbar_demux_004_src0_valid),            //          .valid
		.sink4_channel        (rsp_xbar_demux_004_src0_channel),          //          .channel
		.sink4_data           (rsp_xbar_demux_004_src0_data),             //          .data
		.sink4_startofpacket  (rsp_xbar_demux_004_src0_startofpacket),    //          .startofpacket
		.sink4_endofpacket    (rsp_xbar_demux_004_src0_endofpacket),      //          .endofpacket
		.sink5_ready          (rsp_xbar_demux_005_src0_ready),            //     sink5.ready
		.sink5_valid          (rsp_xbar_demux_005_src0_valid),            //          .valid
		.sink5_channel        (rsp_xbar_demux_005_src0_channel),          //          .channel
		.sink5_data           (rsp_xbar_demux_005_src0_data),             //          .data
		.sink5_startofpacket  (rsp_xbar_demux_005_src0_startofpacket),    //          .startofpacket
		.sink5_endofpacket    (rsp_xbar_demux_005_src0_endofpacket),      //          .endofpacket
		.sink6_ready          (rsp_xbar_demux_006_src0_ready),            //     sink6.ready
		.sink6_valid          (rsp_xbar_demux_006_src0_valid),            //          .valid
		.sink6_channel        (rsp_xbar_demux_006_src0_channel),          //          .channel
		.sink6_data           (rsp_xbar_demux_006_src0_data),             //          .data
		.sink6_startofpacket  (rsp_xbar_demux_006_src0_startofpacket),    //          .startofpacket
		.sink6_endofpacket    (rsp_xbar_demux_006_src0_endofpacket),      //          .endofpacket
		.sink7_ready          (rsp_xbar_demux_007_src0_ready),            //     sink7.ready
		.sink7_valid          (rsp_xbar_demux_007_src0_valid),            //          .valid
		.sink7_channel        (rsp_xbar_demux_007_src0_channel),          //          .channel
		.sink7_data           (rsp_xbar_demux_007_src0_data),             //          .data
		.sink7_startofpacket  (rsp_xbar_demux_007_src0_startofpacket),    //          .startofpacket
		.sink7_endofpacket    (rsp_xbar_demux_007_src0_endofpacket),      //          .endofpacket
		.sink8_ready          (rsp_xbar_demux_008_src0_ready),            //     sink8.ready
		.sink8_valid          (rsp_xbar_demux_008_src0_valid),            //          .valid
		.sink8_channel        (rsp_xbar_demux_008_src0_channel),          //          .channel
		.sink8_data           (rsp_xbar_demux_008_src0_data),             //          .data
		.sink8_startofpacket  (rsp_xbar_demux_008_src0_startofpacket),    //          .startofpacket
		.sink8_endofpacket    (rsp_xbar_demux_008_src0_endofpacket),      //          .endofpacket
		.sink9_ready          (rsp_xbar_demux_009_src0_ready),            //     sink9.ready
		.sink9_valid          (rsp_xbar_demux_009_src0_valid),            //          .valid
		.sink9_channel        (rsp_xbar_demux_009_src0_channel),          //          .channel
		.sink9_data           (rsp_xbar_demux_009_src0_data),             //          .data
		.sink9_startofpacket  (rsp_xbar_demux_009_src0_startofpacket),    //          .startofpacket
		.sink9_endofpacket    (rsp_xbar_demux_009_src0_endofpacket),      //          .endofpacket
		.sink10_ready         (rsp_xbar_demux_010_src0_ready),            //    sink10.ready
		.sink10_valid         (rsp_xbar_demux_010_src0_valid),            //          .valid
		.sink10_channel       (rsp_xbar_demux_010_src0_channel),          //          .channel
		.sink10_data          (rsp_xbar_demux_010_src0_data),             //          .data
		.sink10_startofpacket (rsp_xbar_demux_010_src0_startofpacket),    //          .startofpacket
		.sink10_endofpacket   (rsp_xbar_demux_010_src0_endofpacket),      //          .endofpacket
		.sink11_ready         (rsp_xbar_demux_011_src0_ready),            //    sink11.ready
		.sink11_valid         (rsp_xbar_demux_011_src0_valid),            //          .valid
		.sink11_channel       (rsp_xbar_demux_011_src0_channel),          //          .channel
		.sink11_data          (rsp_xbar_demux_011_src0_data),             //          .data
		.sink11_startofpacket (rsp_xbar_demux_011_src0_startofpacket),    //          .startofpacket
		.sink11_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)       //          .endofpacket
	);

endmodule
